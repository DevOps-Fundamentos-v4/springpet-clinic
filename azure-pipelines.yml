jobs:
- job:
  pool:
    vmImage: 'ubuntu-latest'
  displayName: Build

  steps:
  - task: Gradle@3
    inputs:
      gradleWrapperFile: 'gradlew'
      tasks: 'build jacocoTestReport'
      publishJUnitResults: true
      testResultsFiles: '**/TEST-*.xml'
      javaHomeOption: 'JDKVersion'
      sonarQubeRunAnalysis: false
      spotBugsAnalysis: false
    displayName: Build
  
  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'JaCoCo'
      summaryFileLocation: '$(System.DefaultWorkingDirectory)/build/reports/jacoco/test/jacocoTestReport.xml'
      pathToSources: '$(System.DefaultWorkingDirectory)/src/main/java/'
      reportDirectory: '$(System.DefaultWorkingDirectory)/build/reports/jacoco/test'
      failIfCoverageEmpty: true
  - task: SonarCloudPrepare@1
    inputs:
      SonarCloud: 'Sonarcloud'
      organization: 'devops-fundamentos-v4'
      projectKey: 'DevOps-Fundamentos-v4_springpet-clinic'
      projectName: 'springpet-clinic'
    displayName: 'SonarCloud Prepare'

  - task: Gradle@3
    inputs:
      gradleWrapperFile: 'gradlew'
      tasks: 'sonarqube'
      publishJUnitResults: false
      javaHomeOption: 'JDKVersion'
      sonarQubeRunAnalysis: true
      sqGradlePluginVersionChoice: 'specify'
      sonarQubeGradlePluginVersion: '3.5.0.2730'
      spotBugsAnalysis: false

  - task: Docker@2
    inputs:
      containerRegistry: 'Docker'
      command: 'login'
  
  - task: Docker@2
    inputs:
      containerRegistry: 'Docker'
      repository: 'clagosu/spring-clinic'
      command: 'build'
      Dockerfile: '**/Dockerfile'
  
  - task: Docker@2
    inputs:
      containerRegistry: 'Docker'
      repository: 'clagosu/spring-clinic'
      command: 'push'
  
- job: 
  pool: 'Default'
  steps:
  - task: Kubernetes@1
    inputs:
      connectionType: 'None'
      command: 'apply'
      arguments: '-f deployment-app.yaml'
  
  - script: kubectl port-forward deploy/petclinic-deployment 8086:8085

  - task: TaurusRunner@0
    inputs:
      taurusConfig: |
        execution:
         - scenario:
             requests:
              script: petclinic.jmx
      jmeterHome: 'C:\Users\clago\Downloads\apache-jmeter-5.5\apache-jmeter-5.5'
      jmeterPath: 'C:\Users\clago\Downloads\apache-jmeter-5.5\apache-jmeter-5.5\bin'
      jmeterVersion: '5.5'
      outputDir: 'taurus-output'
  
  - script: jmeter -n -t $(System.DefaultWorkingDirectory)/jmeter/test-plan.jmx -l $(System.DefaultWorkingDirectory)/resultados.jtl
      
